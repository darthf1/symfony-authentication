security:
  enable_authenticator_manager: true
  # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
  # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
  providers:
    users_in_memory:
      memory:
        users:
          user: { password: '$2a$12$eLXuus6Yier3M9afrDZ6MOX.ig/HgI/bTcd98Pi3/Tz3pq5xhvy4y', roles: [ 'ROLE_ADMIN' ] }
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      pattern: ^/
      provider: users_in_memory
      stateless: true
      json_login:
        check_path: /v1/login
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
      login_link:
        check_route: api_login_check
        lifetime: 2630000
        signature_properties: ['id']
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
      jwt: ~

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/v1/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
